// <auto-generated />
using System;
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityLayer.Concrete.Basvuru", b =>
                {
                    b.Property<int>("basvuruID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("basvuruKabulDurumu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("olusTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("projeAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("projeID")
                        .HasColumnType("int");

                    b.Property<int?>("uyeID")
                        .HasColumnType("int");

                    b.HasKey("basvuruID");

                    b.HasIndex("projeID");

                    b.HasIndex("uyeID");

                    b.ToTable("Basvurus");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Iletisim", b =>
                {
                    b.Property<int>("iletisimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mesaj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("olusTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("resimURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("soyad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iletisimID");

                    b.ToTable("Iletisims");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Kategori", b =>
                {
                    b.Property<int>("kategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("kategoriAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("kategoriID");

                    b.ToTable("Kategoris");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Maliyet", b =>
                {
                    b.Property<int>("maliyetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("maliyetAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("maliyetFiyati")
                        .HasColumnType("int");

                    b.Property<int?>("projeID")
                        .HasColumnType("int");

                    b.HasKey("maliyetID");

                    b.HasIndex("projeID");

                    b.ToTable("Maliyets");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Pozisyon", b =>
                {
                    b.Property<int>("pozisyonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("pozisyonAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pozisyonSeviyesi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("projeID")
                        .HasColumnType("int");

                    b.Property<int?>("uyeID")
                        .HasColumnType("int");

                    b.HasKey("pozisyonID");

                    b.HasIndex("projeID");

                    b.HasIndex("uyeID");

                    b.ToTable("Pozisyons");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Proje", b =>
                {
                    b.Property<int>("projeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("kategoriID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("olusTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("projeAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("projeDetaylari")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("projeDurumu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resimURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("uyeID")
                        .HasColumnType("int");

                    b.HasKey("projeID");

                    b.HasIndex("kategoriID");

                    b.HasIndex("uyeID");

                    b.ToTable("Projes");
                });

            modelBuilder.Entity("EntityLayer.Concrete.ProjeGereksinim", b =>
                {
                    b.Property<int>("gereksinimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("gereksinimAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gereksinimSeviyesi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("projeID")
                        .HasColumnType("int");

                    b.HasKey("gereksinimID");

                    b.HasIndex("projeID");

                    b.ToTable("ProjeGereksinims");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Takim", b =>
                {
                    b.Property<int>("takimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("olusTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("projeAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("projeID")
                        .HasColumnType("int");

                    b.Property<int?>("uyeID")
                        .HasColumnType("int");

                    b.HasKey("takimID");

                    b.HasIndex("projeID");

                    b.HasIndex("uyeID");

                    b.ToTable("Takims");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Uye", b =>
                {
                    b.Property<int>("uyeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parola")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uyeAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uyeSoyadi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("uyeID");

                    b.ToTable("Uyes");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Yetenek", b =>
                {
                    b.Property<int>("yetenekID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("uyeID")
                        .HasColumnType("int");

                    b.Property<string>("yetenekAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yetenekSeviyesi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("yetenekID");

                    b.HasIndex("uyeID");

                    b.ToTable("Yeteneks");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Basvuru", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Proje", "Proje")
                        .WithMany("Basvurus")
                        .HasForeignKey("projeID");

                    b.HasOne("EntityLayer.Concrete.Uye", "Uye")
                        .WithMany("Basvurus")
                        .HasForeignKey("uyeID");

                    b.Navigation("Proje");

                    b.Navigation("Uye");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Maliyet", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Proje", "Proje")
                        .WithMany("Maliyets")
                        .HasForeignKey("projeID");

                    b.Navigation("Proje");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Pozisyon", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Proje", "Proje")
                        .WithMany("Pozisyons")
                        .HasForeignKey("projeID");

                    b.HasOne("EntityLayer.Concrete.Uye", "Uye")
                        .WithMany("Pozisyons")
                        .HasForeignKey("uyeID");

                    b.Navigation("Proje");

                    b.Navigation("Uye");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Proje", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Kategori", "Kategori")
                        .WithMany("Projes")
                        .HasForeignKey("kategoriID");

                    b.HasOne("EntityLayer.Concrete.Uye", "Uye")
                        .WithMany("Projes")
                        .HasForeignKey("uyeID");

                    b.Navigation("Kategori");

                    b.Navigation("Uye");
                });

            modelBuilder.Entity("EntityLayer.Concrete.ProjeGereksinim", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Proje", "Proje")
                        .WithMany("ProjeGereksinims")
                        .HasForeignKey("projeID");

                    b.Navigation("Proje");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Takim", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Proje", "Proje")
                        .WithMany("Takims")
                        .HasForeignKey("projeID");

                    b.HasOne("EntityLayer.Concrete.Uye", "Uye")
                        .WithMany("Takims")
                        .HasForeignKey("uyeID");

                    b.Navigation("Proje");

                    b.Navigation("Uye");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Yetenek", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Uye", "Uye")
                        .WithMany("Yeteneks")
                        .HasForeignKey("uyeID");

                    b.Navigation("Uye");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Kategori", b =>
                {
                    b.Navigation("Projes");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Proje", b =>
                {
                    b.Navigation("Basvurus");

                    b.Navigation("Maliyets");

                    b.Navigation("Pozisyons");

                    b.Navigation("ProjeGereksinims");

                    b.Navigation("Takims");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Uye", b =>
                {
                    b.Navigation("Basvurus");

                    b.Navigation("Pozisyons");

                    b.Navigation("Projes");

                    b.Navigation("Takims");

                    b.Navigation("Yeteneks");
                });
#pragma warning restore 612, 618
        }
    }
}
